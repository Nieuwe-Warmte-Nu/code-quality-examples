[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools ~= 67.7.2",
    "wheel ~= 0.40.0",
]

[tools.setuptools]
packages = ["src/your_package"]

[project]
name="code-quality-examples"
version= "0.0.1"
authors= [{ name="Sebastiaan la Fleur", email= "sebastiaan.lafleur@tno.nl"}]
description="your description"
classifiers = [
        "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.11",
        "Operating System :: OS Independent",
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "Intended Audience :: Information Technology",
        "Topic :: Scientific/Engineering",
        "Topic :: Scientific/Engineering :: Mathematics",
        "Topic :: Scientific/Engineering :: Physics",
        ]

dependencies = [
    "pandas ~=2.0.1",
]

[project.optional-dependencies]
dev = [
    "pip-tools~=6.13.0",
    "black~=22.1.0",
    "flake8==6.0.0",
    "Flake8-pyproject==1.2.3",
    "pytest ~=7.3.1",
    "pytest-cov ~=4.0.0",
    "bump2version==1.0.1",
    "pylint",
    "mypy"
]
doc = [
    "sphinx ~=7.0.0",
    "sphinx-rtd-theme ~=1.2.0"
]

[project.urls]
homepage = "https://www.TNO-or-deltares.nl"
documentation = "https://readthedocs.org"
repository = "https://github.com"
changelog = "https://github.com/MichielTukker/DeltaresPythonTemplate/blob/main/CHANGELOG.md"

[project.scripts]
say_hello = "code_quality_examples.main:main"

[tool.pytest.ini_options]
minversion = "6.0"
python_files = "*"
testpaths = "unit_test/"
addopts = "--cov=code_quality_examples --cov-report html --cov-report term-missing --cov-fail-under 95"

[tool.coverage.run]
source = ["src"]

[tool.flake8]
ignore = []
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 120
count = true

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120

[tool.mypy]
files = "src/code_quality_examples/,unit_test"

[[tool.mypy.overrides]]
module = "code_quality_examples.*"
#disallow_untyped_defs = true
#disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "unit_test.*"
check_untyped_defs = true
